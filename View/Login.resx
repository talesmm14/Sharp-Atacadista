<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>