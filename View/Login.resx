<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUTExIVEhUVGBUXGBgVEhUaFxUYFRUXFxUVFRYY
        HSggGBolGxcVITEhJSkrLjAuFx81ODMtNygtLiv/2wBDAQoKCgUFBQ4FBQ4rGRMZKysrKysrKysrKysr
        KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKyv/wAARCADhAOEDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAEHAgYIBQQD/8QASRAAAQIEBAMFBAYGCAQHAAAAAQACAwQRIQUSMUEG
        B2ETIlGBoRQyQnEII1JikZIVJHKCorEWM0NTk6PBwnOD0fAXVGOys8Ph/8QAFAEBAAAAAAAAAAAAAAAA
        AAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/ALqa2lypffRM9bJ7vWqCWuAFN1ix
        tLlZZK3UZs1kB4ropDrU3UVy9VOTfzQQwUuUeK6KHRAQa2AuSTYU8VWvFnOOVliYMmPboxNAWH6oONgM
        4vEOlm2PiEFmF4prstMx3mdhsnUPmBGeK9yX+sdUaguByNPQuC0FvC2O41352OZKXdcQyC2xvaXaQT/z
        DVbpw5ykwyWoXQjMvHxRzmHlCFGU+YJ6oNTmecc3NOLcOwx8Qi2ZwfFP7zIQAb+YoIXFc2bvbKNOgrBZ
        T8odEHmrlgw2wgGMa1rRoGgNA+QFgv0yUugpdnKvF4l5nGHAnZsaYiD+ItWL+RER934o5/zlif5xldXv
        dFGaltUFKs5DOb7mKOB6SpHqIyzfymxSEPqMYeDtWJMQx+LHOornyUunvdKIKWOFcVytCyO2baNu0hPq
        Ovbta4+V0/8AFvEpTu4jhhAqBna2JC/AuDmvPyIV056WUPhihr3hoQRY/NBovDnNvDJmzoxlnn4ZhuUf
        4gJZ+JC3hjg4BzSHNNwQQQR4gjVahj/LDDJypMuIDzXvy9IZqdy0DIT82laHG4AxfCXGJhc26PDBJMKw
        JvvBeTDeabijvABBd7zXRQw01VT8Lc5IefsMSguk4wOUuyu7OtvfY7vwj+I6hWpLR2RmNiMe17HAFrmO
        DmuB0LXCxCDPKa121WTzWwUZ9vJKZb6oJYaarHKa12U0zX0TPt5IDzXRSw0sVFMvVMua+iCKKUqiCXAA
        WUMvqoa2lypf3tEEEmtBosnimiB1LKGtpcoJZfVeDxbxbLYdC7SYiUrXJDbQxIhGzG/hc0ArcrxeZnMS
        DhjMraRZp47kKtmg/wBpFpcN8Bq7pcjTuDuXUfEIwxDGHOeXULIDqgkat7Qf2cMVtDFOtLgh55iYtxK4
        5f1LD603yOodCbOjv6WaKbHW0OC+AJLDm1hQ88XQxolDEPjl2YOjadarZZeCIYDWtDGtAa1rQAGgaAAW
        AWbhXRBFTWmyyeKaJmtTfRQ0ZdUEsFdViCa02UuFbhSXVFEB9tEYK6qG93VHNrcIIBJN9FL7aKXOrYKG
        93VBLQCL6rFprqhbW4WTnVsEEPtopAFK7qG93VQWVNUHhcTcIymItyTUIOIBDYje7EZ+y8fyNR0VTzmC
        Yrw48xpSIZuRqXPaRUNG/aw9WGn9oy1r00V7uNbBQ21ig1bgbjuUxSHWEezjtFXwXkZ2+Lm/bZX4h4io
        FaLaGGuqqjjzlY4RPb8KPs8ww5+yYcocftQfsO17vunpv6HLXmWJ79UmwIM6wkUIyiNlsaNPuRBerOlR
        uAFjvNNFlQUrujTSxWOW9fNAZfVHmmil3e0UtNLFBClRREDPWyHurJwFLa9FDOvqgZK3Wj8z+YLMMg5W
        0fNRAezZs0adrE+6DoPiIpsSPa414nh4bKvmIl6d2GytDEiEd1g9STsASqy5X8LRcQmHYxiAz5nZoDCL
        OLTQRMp0hspRo8RXYVD7uWXL2IYn6TxMGLMRD2kOHEuWE3EWKD8emVmjRTegbbuTfzRnX1WJrXogkHNZ
        CctlL+nojOvqgZN/NQDmsovXp/osn9PRBBdlspyUujOvqsRWvRBI7yF2Wy1bifmFh0iS2LMNMQaw4Qzv
        r4ODbNP7RC0Kf5+wgfqZF8QeMWM1h/K1rv5oLnyUuoHe8lRjPpAPr3sPaR4CZI/+srYsJ55SEQgRocaV
        O7soiMHmzvfwoLRzUspLKXXx4RisCahiJAjQ4zftMcDQ+B8D0N19Ta76dUGQGZRmpZH9PRZACnVBBblu
        gGZQzr6o/p6IGbbyVb81eWwnB7XKfVzrKGxy9vluAT8MUUGV/QA7FtlUFOv+qxZ19UFa8qOYXtv6nOVh
        zsIEd4ZTGDPesdIraHM3oSN6WVm28lVPOLgh7iMTkQWTMGj4nZ2Lwy4itprEbQV8W/Kh2jlnxozFJXOc
        rZiHRsZg8fhiNH2XUr0IIvSpDbyMqBtbqGdfVH9NOiBVSiIIDaXURHAitaAak2AHipD62VZ89uJzKygl
        IRPazdWmmrYIs/8AMTk+Rd4INQjufxJi4YCRIStbioqytz+3FcKDSjR901veWl2wmta1oaxgDWtaKBrQ
        KNaBsAAtX5YcIjDpFkNw+uifWRj98izPk0Ub86ndbYHVsUBwzaKc23koJy6Kcm/mghoy3KOGa4QHNYoT
        lsEE5tvJQ0ZdVOXfzUA5rFB8+IzkODDfGivbDhsFXOcaAAf96LnnmJzcmJwugyjnS8tpmBLYsXq5w9xp
        +yPMmtBhzn46M5HMrAf+qwHEGh/rorbOefFouG+Z3FKzQEREBERB6GC41MScQRZaM+C8btNiPBzTZw6E
        ELorlpzQh4kBLxw2DNgWA9yNS5MOujhqWHa4renMq/SBGcxzXscWuaQ5rmkgtcDUOBFwQb1QdtN7uqgt
        rdabyr4yGKSlXkCYg0ZGAoM1R3YoGwdQ+YdtRbkX0sgkurYI05dULctwgGbVBGXfzUuOawUZ9vJSRluE
        Bpy2Kofi/D38PYpDn5Zv6pHcQ+G3QVIMWD4Co77PAjwbe+AM1yvF4vwFmISkWViUGcd11Lse28N/kaV8
        RUboPSkp1kxCZFhODmRGte13i1wqCvoa6liqc5F4/Egvj4TMd2JBc90MHajqRoY+Tu+Pm5XGG1ugiilK
        ogPIpsFRHCjf03xBEm396XlTmZXSjCWy7b6VdmiU6OCsTm5jJk8MjuBo+KOwZehrFqHEHxDA8+S87kbg
        Ps+GNiEUfMuMU11ye7CHyygu/fKCwjWttFk+m2vRA+llAbS6CWdfVY3r09FJGZTm28kB/T0RnX1UAZbo
        Rmugi9enpRalzZ4h9hw2LEY7LFiUgwyDQh0QGrhTcMD3DqAtvzbeSo/6SU4R7HArb62IR17jWn/3/igp
        FERAREQEREBERBufKXiEyWJQTUiHGIgxBtSIQGuP7L8pr4A+K6sFKXpVcQg0uLLs7A5v2iWgR/72FCif
        nY13+qD7m9dOqP6eikuzWQHKgm1Nq+tVizr6pl381JOayCH9PRZWptX1UA5bFRl380FIc45J+H4jK4tA
        bTM4CJsDEhjRx+/Cq39wq55GcbHhQ40I1hxGNe0jdrwCPQrweZeCe3YbMQQKva3tIfjnhd5oHzoW/vLW
        eQGP9th7pdxq+VeWi9T2cSr2fxdoPk0ILNRRRSgpHn7OOmJqRw9h7zjmI2LozxChV+WV/wCZXPKSrYEO
        HChijGMaxo8GsaGtH4BUpG/XOLgPeZLuFPu9hAzf/L/NXky2vqgBtbqGurYqHA1tosnkbIIccuikNtXz
        RltfVYkGvRBLTWxRxy2Cl5rp6Iy2vqgZbV81QP0kAfaZV2xgvHmIl/5hX5Q16f6Ko/pHYXnlZeZaK9jE
        cx1NmxmggnpmhgfvIOf0REBERAREQEREBdgcCEjDZEH/AMrL+sJi5Iw2TdHjQ4LPeivZDb+09waPUrtG
        VgthsbDGjGtaPk0UH8kH6ObS4RozaqGCmqPvp6IGbbyUuGW4U1FOqxZbX1QS0ZrlRm28kePBZVFOqCHD
        LoqL5cj9H8RTUj7sON2rWNGlvr4PypDzDzV5str6qjuZ/wCqcRSU03uiJ7OXHxyxDCiD/DyjzQXjVSss
        iIKK5RDtcexCObge0nziTLaegcrz97pRUb9HZ2ean3n4mwz+Z73f6K8X93RBOellGXLdSG1FVDXVsUCm
        bopzbeSh5posg21d0GIblvqhGa6MNbFHmlggnNt5LyeKcDZOSkaWfSkVhaDT3XDvMf5ODT5L1stq76qG
        muqDivEpGJLxXwYrSyJDcWOB2LTQ/MdV8y6J5zcujOD2uVbWYY0B7BrHYNCPGI0aeItsAud3NIJBFCLE
        HUdCghERAREQERbBwXwlHxKYEGCKNFDEiEdyE0/E7xJvRupPSpAbvyB4YMaadOvb9XLVDPB0Zzf9rTX5
        uauhslbrz+HMFgykvDl4LcsOGKDxcTdz3HdxNSfmvvLqGiDIuzW0QHKjhS4RgrqgjLv5qSc1tFjmvTbR
        ZPFLhArlsoy7+algrcrEOvTbRBlXMqS+knLECRiDYx2k/PsnN/k5Xa8U0VR/SObWSlnbiOR+MN3/AEQb
        X/TEfaH4ouff6Uv8f5Ig3/6OrcsxPQ9w2H/C94P81ejLaqiuTz+xx3EIO1JltOsOZaB6ZlevvdEGJaSa
        jRZPNdEz0smXLfVAYaarEtNa7KaZuiZ9vJBLzXRGGmqjLlvqlM19EEZTWu2qyea6KM+3klMt9UEsNNVX
        vMDlXL4iXRoZEtMnV4FWRP8AisG/3hfxqt+jxWtaXvc2G1oqS4gNAG5JsAtA4h5yYbL1ZDc+beLfUjuf
        4jqAjq3MgoriXgOfkSe2l3Fgr9bDBfCoNy8Du/vUK1lW1iXPicd/US0CCPvl8R3ke6PRaJjXF8zNuLo3
        YOJ3EnLAj9/s83qg8BftKSkSK4MhQ3xHnRrGlzj8mtFSphTTmmoDK9YcNw/BzSFteD8zsSlQBCiw2sHw
        CVl2tP5GA+qDYeD+S81MFr5w+yQtS2xjuFrBtwze7rj7JV88PYDAkYQgy8IQoYuaauNKZnu1c7S5VJYV
        z5mQf1mVhRRUXhOdDdT5OzAn8FYnD/NvDZujDFMq8/DMANHlEBLPxIQb2++ikOtTdYMeAAQQ4G4INiPE
        HdZZK3QQwU1R4ropzZraJXLbVBOYUpusWCmqnJv5pXNbRBDxXRZVtTdRXLbVMm/mghltVUn0kH/qcsPG
        OT+EN3/VW5XN0VI/SUmKCShV/v3n/Ka3/cgrD+jj/A/giv7+hHT0/wD1EGjMd7HxdfusjxPze0wbf5pH
        mFe77aKjOf8ALugTslPw9aBvQPl4giMr1Of+FXbh022JCZFaasisY9pG7XtDgfwIQfQ1oIqdVi01sULa
        3UvdWwQQ+2iyDRSu6hltVjlvVBLDXVHmmil5rYI001QTltXdVzx9zXlpDNBhUmpkVBaD9XCP/qPGp+6L
        2uWrTuafNkuL5XD30bUtiTDTd2xbBOzfv77WuaXQe7xRxfOYg/NMxnOaDVsMd2EzX3WC1b0qanxK8JEQ
        EREBERAREQbNwlx1O4c4dhFJh1qYMSroTta92vdN9WkFdAcB8zJXEqQ6+zzH9y9w79qkwnfGNbWNjal1
        yysocQtIc0lpBBBBoQRcEEaFB248U0Rgrqqe5Tc1u3c2UnnARTRsKMbCKdBDieD/AAd8Whv71wPFdEDM
        a020UvFNFOa1N9FiwUuUEsFdVjmvTZS4V0WRdam+iCHimiofmo72viCTlR3gz2Zjh4dpFMR5P/LLT5K+
        GCmqoTgA/pLiSYnB3mQjGiNI0LQOwg3/AGSD+6gv3OixqiDROdWA+04VFIu+XIjt+TKiJ/luefIL5uRe
        N+1YY2E51XyrjCOlSw96EflQlv7isFzcwLXCrXAgg6EEUIKoDgiM7BceiyTyRBjO7IE6EOOaViE0ubhp
        2Gd3gg6Bz0spLct1LQKX1WDTXVBNM3RM+3kj7aKQBTqggjLdUrzw5hFubDpZ1HEUmHg6Aj+oaeoPe/Dx
        W+8y+Lf0bJPiihjP+rgg/bI98jwaKu+dBuuUosRznFziXOcSSSSSSTUkk6kndBgiIgIiICIiAiIgIiIC
        IiAui+S3MIzcP2OYdWYhNqxzjeNDb4neI3fci+xXOi+rC8QiS8aHHhOLIkNwc0jYg7+IOhG4JQdqZN/N
        K5raLxeEOIWT8pCmWWDx3m/YeLPYfka/MUO69p9tEAnLbVMm/mjL6qKmvRBq/M3H/ZMNmIoOV5b2cOhv
        ni9wEV3aCXfurUfo84P2MlFmiO9Mvo3/AIcGrR/GYn5QvA544o+dn5fC5fvFjm5gNDGjUDQ62jWGtfvu
        8FdWB4ZDlpeFAZ7sJjWCupDRSp6m580H2URQiCXOrYKo+f3CpiQGT0MfWS/diU1MImzrfYcfweTsrcLa
        XX5R4DYzHMiNDmOaWuaRUOa4Uc0jwIsg1TlfxT+kpJkRxHbQ6Q4w3ztFn/J7aO8K5hstwc6tgudYD4vD
        OMFrszpSLat+/AcbOHjEhm3kdA5dCy8Zj2NiQ3B7HgOa4EFrmuFQ4EagghB+rTl1UZd/NSBmXlcU4x7J
        JzEex7GE9wru4CjB5uyjzQc787uJTOYi+G01hStYTPAvr9c755hl+TAq+WUR5cSSSSSSSTUknUk7lYoC
        IiAiIgIiICIiAiIgIiICIiC3vo88SGHMRJF57kwC+HU6RWDvAftMB/wwr/aMtyuMuH8UdKzMGYbWsKIx
        9tw1wJb5io812XBiiIAQatIDgRuCKg/gUGThW4Xj8Y8Rw8Pk4sw++RtGNPxxDZjPM6nYAnZewTlsue+P
        cYiY9icKQkzmgQ3EBwuxx/tZh2xY0VDfEae9RB6vInAnzExGxaZq45nthkj3osS8WIPkDlFLd53grvc2
        twvhwHCoUtLw5aC3LDhNDW+J8XO+8SSSfElfcXUsgmqJREENrW+nVS/p6IXVsje7r6INW5icHQ8UlDCN
        GxmVdBefhfT3XHXI6gB8jsFWvKDjV8nGOFT9YYDi2EX/ANlEreE46ZHG7TsTuCKXkWVuq25u8uxiLPaZ
        YUm4bbiwEwwfATs8fCfI7FoWS/p6Kt+f092eFZN40aEw+NG5otT5wx+K8XlJzNJIw/EHFsVpyQosSxcR
        bsY1dIgNgTrob+9H0kotIEo37USK78rGj/cgoVERAREQEREBERAREQEREBERAREQF1vy1nu3wqTeDU9k
        1hO9YVYRr5sXJCtTB+ZnsGCwZWXNZtxjDNTuwGOiuIea2c81NBoNTsCG186OPzDacOlXZo8TuxnNu5jX
        aQW0+N1b+ANNTb3+UXAv6NgdpGb+tRwDE37NmrYIPq6mp8aBa9ye5cPYRiM6CYzquhQ4lS5hdcxotb9o
        a1AOlam9Mtw5tvJAf09EbTfXqoAy6oW1ugKUqiAW0uje9qobXfTqj+nogF1LKXNpcKW0pfVYtB306oK0
        5o8sG4gHTMsGw5sC40ZMADRx+GJ4O30OxFJ8VcRTkaFCk5wOzyjngGICIoDg0ZIlfeplFDrfddbv6ei1
        Lj3gCVxSH3/qphooyM0DMPBrx8ba7G42Iqahyei2Di7g6bw2JkmIZDSe5EbUwon7Lqa/dND0WvoCIiAi
        IgIiICIiAiIgIiICIvW4b4bmZ+KIUtCMR1sx0YwH4ojzZo1+dLVKDy4bC4hrQSSQAAKkk2AA3KvnlPyn
        7FzZufaDEFHQoBuIZ2fF2L/Bvw73s3ZOXnLGBhuWLEpMTP8AeEd2HXUQQdLWzG56Vot/f09EEOdlspy7
        +aM6+qxFa9EGTTm1UOdlsFL+nojKb+qBRFClALq2Qd3zRzaXCN72qCMlbqS7NZQXUspc2lwggHKmXfzU
        tGbVRm28kH4T8pDmIboUWG2Ix3vNe0OafIqnOM+RzTWJh8TKdewiuJb8ocU3HydX9pXW4UuEaK6oOMsb
        wOZk39nMwXwXbB7bOpqWO0cOoJC85dqz0pDjNMKNDZFhmxa9gc0+RVecSck8PjVdAMSUea+6c8Op3LHm
        vkHAIObUVoYvyPxCHUwHQZpuwa/s3n5tfRo/MtOxHgrEYBpEkpgU3EJzm/nZVvqg8BFlEhlpIcC0jUEU
        I+YKxQERS1pJoBU9EEIvcw7g+fjkCFJTD679i8N83uAaPxW3YLyUxKMR2vZSw3zxMzqeIbDqPIkIK1X2
        YXhcaZeIcCE+M8/CxpcdaVNNB1Nlf+B8j5GBQzMSJNu8P6uH+VpzfxKycLwqBLwwyBCZBZrlhsDRXxIG
        p6lBSnB/I15yxcRiZG2PYQnAuOhpEiaN3BDa/tBXPhGEQJaEIUvCZBht+FopU+JOrj1N19rXVsUcaaIJ
        z7eSgDLdZZbV31WLTWxQSRmumfbyUONLBZZbV31QQBlUFua6lpzaqHOpYIJqiURBAQqUQAoClEEFSiII
        CFSiAoClEEFZsUIg8Pin3T8iqexr+tKIg/LD/eb8wrb4M93/AL8SiINniKCiIAUKUQCgREEKSiIAUKUQ
        CgREBERB/9k=
</value>
  </data>
</root>